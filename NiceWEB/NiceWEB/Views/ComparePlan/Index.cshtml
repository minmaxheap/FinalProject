@model IEnumerable<NiceWEB.Models.ComparePlan>
@using NiceWEB.Html
@using NiceWEB.Models


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_Layout.cshtml";
}



<div style="display:none;" class="row">
    <div class="form-group">
        @*@Html.HiddenFor(m => m.Columns, new { @id = "dataObjCol", placeholder = Html.DisplayNameFor(m => m.Columns), @class = "form-control" })
            @Html.HiddenFor(m => m.Data, new { @id = "dataObjData", placeholder = Html.DisplayNameFor(m => m.Data), @class = "form-control" })*@

    </div>
</div>

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0">계획 대비 생산 실적 조회</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<hr />
<div class="content">
    <div class="container-fluid">

        @using (Html.BeginForm("Index", "ComparePlan", FormMethod.Post, new { @id = "form1", @name = "form1" }))
        {
            <div class="row">


                <div class="col-3">

                    <div class="form-group">
                        <label>조회날짜:</label>

                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="far fa-calendar-alt"></i>
                                </span>
                            </div>

                            <input type="text" class="form-control float-right" id="reservation" />
                            <input type="hidden" name="startDate" id="startDate" />
                            <input type="hidden" name="endDate" id="endDate" />

                        </div>

                    </div>

                </div>
                <div class="col-3">
                    <div class="form-group">
                        <label>작업지시:</label>
                        @Html.DropDownList("workID",
                                  (IEnumerable<SelectListItem>)ViewBag.orderList, null, new { @class = "form-control" })

                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group">
                        <label>품번:</label>
                        @Html.DropDownList("prdCode",
                                  (IEnumerable<SelectListItem>)ViewBag.prodList, null, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-3">
                    <div class="form-group">
                        <label>&nbsp;  </label>
                        <button type="button" id="saveBtn" class="btn btn-block btn-secondary">조회</button>
                    </div>
                </div>


            </div>
        }


        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">계획 대비 생산 실적</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        @*<table id="compareplan" class="table table-bordered table-striped">
                        </table>*@
                        <table class="table table-striped table-bordered table-hover"
                               id="TableId"
                               cellspacing="0"
                               align="center"
                               width="100%" border="1">

                            <thead>
                                <tr>
                                    <th scope="col">작업일자</th>
                                    <th scope="col">작업지시</th>
                                    <th scope="col">품번</th>
                                    <th scope="col">품명</th>
                                    <th scope="col">계획수량</th>
                                    <th scope="col">양품수량</th>
                                    <th scope="col">불량수량</th>
                                    <th scope="col">양품률(%)</th>
                                    <th scope="col">불량률(%)</th>
                                    <th scope="col">마감시간</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var p in Model)
                                    {
                                        <tr>
                                            <td>@p.ORDER_DATE</td>
                                            <td>@p.WORK_ORDER_ID</td>
                                            <td>@p.PRODUCT_CODE</td>
                                            <td>@p.PRODUCT_NAME</td>
                                            <td align="right" style="font-weight: bold;">@String.Format("{0:#,###}", p.ORDER_QTY)</td>
                                            <td align="right" style="font-weight: bold;">@String.Format("{0:#,###}", p.PRODUCT_QTY)</td>
                                            <td align="right" style="font-weight: bold;">@String.Format("{0:#,###}", p.DEFECT_QTY)</td>
                                            <td align="right" style="font-weight: bold;">@p.QUALITY_RATE</td>
                                            <td align="right" style="font-weight: bold;">@p.DEFECT_RATE</td>
                                            <td align="right">@p.WORK_CLOSE_TIME</td>
                                        </tr>

                                    }
                                }
                            </tbody>

                        </table>
                    </div>
                    <!-- /.card-body -->
                    <nav aria-label="Page navigation example">
                        <ul class="pagination justify-content-center">
                            @Html.PageLinks((PagingInfo)ViewBag.PagingInfo, (x) => Url.Action("Index",
                                new
                                     {
                                         page = x,
                                         startDate = ViewBag.startDate,
                                         endDate = ViewBag.endDate,
                                         workID = ViewBag.workID,
                                         prdCode = ViewBag.prdCode
                                            }))
                        </ul>
                    </nav>
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <div class="card">
            <div class="card-body">
                <div class="row">

                    <div class="col-4">
                        <table class="table table-striped table-bordered table-hover"
                               id="TableId2"
                               cellspacing="0"
                               align="center"
                               border="1" style="width:500px; height:350px;">


                            <tr>
                                <th style="text-align: center; font-size: 25px;" scope="col">작업지시수</th>
                                <td align="center" style="font-weight: bold; font-size: 25px; ">@ViewBag.work</td>
                            </tr>
                            <tr>
                                <th style="text-align: center; font-size: 25px;" scope="col">총 계획수량</th>
                                <td align="center" style="font-weight: bold; font-size: 25px; ">@String.Format("{0:#,###}", ViewBag.ordQty)</td>
                            </tr>
                            <tr>
                                <th style="text-align: center; font-size: 25px;" scope="col">총 양품수량</th>
                                <td align="center" style="font-weight: bold; font-size: 25px; color: #0D94B6 ">@String.Format("{0:#,###}", Math.Round(ViewBag.prdQty))</td>
                            </tr>
                            <tr>
                                <th style="text-align: center; font-size: 25px;" scope="col">총 불량수량</th>
                                <td align="center" style="font-weight: bold; font-size: 25px; color: #A32D04">@String.Format("{0:#,###}", Math.Round(ViewBag.defQty))</td>
                            </tr>


                        </table>

                    </div>
                    <div class="col-4">
                        <div id="preview-textfield" class="preview-textfield reset" align="center" style="font-size: 25px; font-weight: bold;">총 양품률</div>
                        <canvas id="gauge1" width="550" height="275">
                        </canvas>
                        <div id="preview-textfield" class="preview-textfield reset" align="center" style="font-size: 25px; font-weight: bold;">@ViewBag.qualityRate%</div>

                    </div>
                    <div class="col-4">
                        <div id="preview-textfield" class="preview-textfield reset" align="center" style="font-size: 25px; font-weight: bold;">총 불량률</div>
                        <canvas id="gauge2" width="550" height="275">
                        </canvas>

                        <div id="preview-textfield" class="preview-textfield reset" align="center" style="font-size: 25px; font-weight: bold;">@ViewBag.defectRate%</div>

                    </div>


                </div>

            </div>
        </div>
    </div>
</div>
@{
  string work_order = ViewBag.work;

  decimal ordQty = ViewBag.ordQty;
  decimal prdQty = ViewBag.prdQty;
  decimal defQty = ViewBag.defQty;
  decimal qualityRate = ViewBag.qualityRate;
  decimal defectRate = ViewBag.defectRate;
  string start = ViewBag.startDate;
  string end = ViewBag.endDate;
}

                                    @section Scripts
                                    {

    <script type="text/javascript">
        jQuery.noConflict();
          var startDate;
          var endDate;
        $(document).ready(function () {
            $('#reservation').daterangepicker(
                {
                                        locale: {
                                            format: 'YYYY-MM-DD'
                                                       },


                    @*setStartDate:@ViewBag.startDate,
                    setEndDate:@ViewBag.endDaendDate,*@
                    //startDate: moment().subtract('days', 29),
                    //endDate: moment(),
                    //startDate: a,
                    //endDate: b,
                    startDate: '@start',
                    endDate:'@end',
                    showDropdowns: true,
                    showWeekNumbers: true,
                    timePicker: false,
                    timePickerIncrement: 1,
                    timePicker12Hour: true,
                    opens: 'left',
                    format: 'YYYY-MM-DD',
                    separator: ' to ',
                    //timePicker: true,
                    //timePicker24Hour: true,
                },
                function (start, end) {
                    console.log("Callback has been called!");
                    $('#reservation span').html(start.format('YYYY-MM-DD') + ' - ' + end.format('YYYY-MM-DD'));
                    startDate = start;
                    endDate = end;

                }
            );

            $('#saveBtn').click(function () {
                console.log(startDate.format('YYYY-MM-DD') + ' - ' + endDate.format('YYYY-MM-DD'));
                $('#startDate').val(startDate.format('YYYY-MM-DD'));
                $('#endDate').val(endDate.format('YYYY-MM-DD'));
                $('#form1')[0].submit();
            });





        });

        //function Search_Fn() {
        //       // console.log(startDate.format('YYYY-MM-DD') + ' - ' + endDate.format('YYYY-MM-DD'));
        //    //startDate = start;
        //    //endDate = end;
        //        document.form1.submit();
        //    }

    </script>



    <script>
                var a = parseInt(@qualityRate);
        var opts = {
            angle: -0.2, // The span of the gauge arc
            lineWidth: 0.2, // The line thickness
            radiusScale: 1, // Relative radius
            pointer: {
                length: 0.6, // // Relative to gauge radius
                strokeWidth: 0.035, // The thickness
                color: '#000000' // Fill color
            },
            limitMax: false,     // If false, max value increases automatically if value > maxValue
            limitMin: false,     // If true, the min value of the gauge will be fixed
            colorStart: '#A94072',   // Colors
            colorStop: '#0D94B6',    // just experiment with them
            strokeColor: '#587ABD',  // to see which ones work best for you
            generateGradient: true,
            highDpiSupport: true,     // High resolution support

        };
        var target = document.getElementById('gauge1'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 100; // set max gauge value
        gauge.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        gauge.set(a); // set actual value
    </script>

    <script>

        var b = parseInt(@defectRate);
        var opts = {
            angle: -0.2, // The span of the gauge arc
            lineWidth: 0.2, // The line thickness
            radiusScale: 1, // Relative radius
            pointer: {
                length: 0.6, // // Relative to gauge radius
                strokeWidth: 0.035, // The thickness
                color: '#000000' // Fill color
            },
            limitMax: false,     // If false, max value increases automatically if value > maxValue
            limitMin: false,     // If true, the min value of the gauge will be fixed
            colorStart: '#F5730A',   // Colors
            colorStop: '#A32D04',    // just experiment with them
            strokeColor: '#EEEEEE',  // to see which ones work best for you
            generateGradient: true,
            highDpiSupport: true,     // High resolution support

        };

        var target = document.getElementById('gauge2'); // your canvas element
        var gauge = new Gauge(target).setOptions(opts); // create sexy gauge!
        gauge.maxValue = 100; // set max gauge value
        gauge.setMinValue(0);  // Prefer setter over gauge.minValue = 0
        gauge.animationSpeed = 32; // set animation speed (32 is default value)
        //gauge.set(30); // set actual value
        gauge.set(b);

    </script>

}


